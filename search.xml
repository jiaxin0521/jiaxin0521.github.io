<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一篇先来个碎碎念</title>
    <url>/2022/02/02/hello/</url>
    <content><![CDATA[<p>a最近是真的没干啥，然后第一篇也不知道写什么，然后搞博客还是在曹佬的敦促下完成的（他说我太闲所以emo）</p>
<a id="more"></a>

<p>记录一下搞这个博客的时候遇到的一些问题吧。</p>
<p>（因为没有随时记录的习惯，所以有可能最后写出来就像胡言乱语似的，各位看官谨慎阅读，别污了您的眼）</p>
<h6 id="忘记博客的网址"><a href="#忘记博客的网址" class="headerlink" title="忘记博客的网址"></a>忘记博客的网址</h6><p>我找历史记录、翻聊天记录，然后都没找到，”灵机一动“（各位大佬别骂了什么都不懂的人是这样的）想到网址不就是GitHub用户名+github.io吗？然后也没百度就这样解决了。</p>
<h6 id="不知道怎么开始写"><a href="#不知道怎么开始写" class="headerlink" title="不知道怎么开始写"></a>不知道怎么开始写</h6><p>其实就是hexo g把写好的md文件“编译”成网页源码然后再hexo d部署到GitHub上就可以了</p>
<h6 id="连接到GitHub时超时了"><a href="#连接到GitHub时超时了" class="headerlink" title="连接到GitHub时超时了"></a>连接到GitHub时超时了</h6><p>报错信息：ssh: connect to host github.com port 22: Connection timed out</p>
<p>后面就把ssh再配置一下就解决了然后把它复制到.yml文件里面</p>
<h6 id="换主题"><a href="#换主题" class="headerlink" title="换主题"></a>换主题</h6><p>在<a href="https://hexo.io/themes/">hexo的主题库</a>里面找了一个叫<a href="https://dogzi.fun/">amazing</a>的主题，然后按照提示把它clone了下来，可能是因为我太菜看不懂配置教程，出现了下面的报错</p>
<p><img src="/2022/02/02/hello/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220202155444.png" alt="微信图片_20220202155444"></p>
<p>然后发现可能要npm安装，算了不管了怎么简单怎么来所以就有了这个next主题</p>
<h6 id="不管输入什么命令都出现这些"><a href="#不管输入什么命令都出现这些" class="headerlink" title="不管输入什么命令都出现这些"></a>不管输入什么命令都出现这些</h6><p><img src="/2022/02/02/hello/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220202155639.jpg" alt="微信图片_20220202155639"></p>
<p>因为我换了个好看的终端<a href="https://docs.microsoft.com/zh-cn/windows/terminal/install">Windows Terminal</a>，以前都是直接在blog根目录下输入cmd的，所以我忘记先进入D:hexo\blog这个目录下了，之后就找到了一条命令cd \d “路径”可以直接在cmd进入这个路径。不知道为啥powershell就直接cd “路径”就可以。</p>
]]></content>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>用hexo+github搭建博客</title>
    <url>/2022/02/03/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>近些年来很多用户都喜欢使用 GitHub Pages 来搭建 Hexo 静态博客网站，其最吸引人的莫过于完全免费使用，并且非常稳定。</p>
<p>虽然搭建时比较麻烦，有点折腾，但是配置完成后，基本不需要操心维护的事，甚至放了几年都忘记了，打开来看文章依然还在。</p>
<p>本文就详细介绍下如何使用 Hexo + GitHub 搭建免费个人博客网站的教程。</p>
<a id="more"></a>

<p>为了照顾小白用户（第一次使用 GitHub 和 Hexo），尽可能详细，包括常见的坑和问题都有提示说明。下面目录中<strong>第 3~5 步为最重要的步骤</strong>，其他内容如果已经会的可以选择性跳过。</p>
<p>看起来有点繁杂，捋顺了倒也简单，认真跟教程走，完整操作一遍大概需要 30 分钟。（事实上本人搭这个博客至少花了一天时间，花的时间多少主要看个人还有您看的教程是否对应最新版本，否则可能出现版本不兼容问题，然后这些问题因为我没有及时记录）</p>
<p>o(￣▽￣)ｄ</p>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h3 id="GitHub-Pages-是什么？"><a href="#GitHub-Pages-是什么？" class="headerlink" title="GitHub Pages 是什么？"></a><strong>GitHub Pages 是什么？</strong></h3><ul>
<li><a href="https://link.zhihu.com/?target=https://help.github.com/en/articles/what-is-github-pages">What is GitHub Pages? - GitHub Help</a></li>
</ul>
<p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p>
<h3 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="Hexo 是什么？"></a><strong>Hexo 是什么？</strong></h3><ul>
<li>官网：<a href="https://link.zhihu.com/?target=https://hexo.io/zh-cn/">hexo.io</a></li>
</ul>
<p>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p>
<h3 id="Hexo-GitHub-文章发布原理"><a href="#Hexo-GitHub-文章发布原理" class="headerlink" title="Hexo + GitHub 文章发布原理"></a><strong>Hexo + GitHub 文章发布原理</strong></h3><p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p>
<p>差不多就是下面这张图这样：（hexo g&amp;&amp;hexo d两个命令可以简化成一个命令hexo g -d，但是我建议每次部署之前都要先清理一下缓存，不然可能会出现奇奇怪怪的问题）</p>
<p><img src="/2022/02/03/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220203093820562.png"></p>
<h3 id="优点和不足"><a href="#优点和不足" class="headerlink" title="优点和不足"></a><strong>优点和不足</strong></h3><p><strong>优点：</strong>完全免费；静态站点，轻量快速；可按需求自由定制改造；托管在 GitHub，安全省心；迁移方便……</p>
<p><strong>不足：</strong>发文不便，依赖于本地环境；更适合个人博客使用；GitHub 在国内访问速度有点慢。</p>
<p>（通俗的说，就是敲hexo g -d敲到手软，每次因为github pages有延迟而只能hexo s 先预览文章）</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h3><ul>
<li>输入代码时，核对准确，最好切换成英文输入法；</li>
<li>将文中的 “用户名” 和 “邮箱” 替换为自己的 GitHub 账户名和绑定的邮箱；</li>
<li>统一使用 Git Bash 进行操作（支持 Win、Mac）；</li>
<li>小白请严格按步骤进行，不要跳！</li>
</ul>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a><strong>环境搭建</strong></h3><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，安装 Node.js 和 Git。</p>
<ul>
<li>Node.js：<a href="https://link.zhihu.com/?target=https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li>
<li>Git：<a href="https://link.zhihu.com/?target=https://git-scm.com/downloads">https://git-scm.com/downloads</a></li>
</ul>
<p>下载 Node.js 和 Git 程序并安装，一路点 “下一步” 按默认配置完成安装。</p>
<p>安装完成后，Win+R 输入 cmd 并打开，依次输入 <code>node -v</code>、<code>npm -v</code> 和 <code>git --version</code> 并回车，如下图出现程序版本号即可。</p>
<p><img src="/2022/02/03/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220203094412675.png"></p>
<h2 id="连接-Github"><a href="#连接-Github" class="headerlink" title="连接 Github"></a>连接 Github</h2><p>使用邮箱注册 <a href="https://link.zhihu.com/?target=https://github.com/">GitHub</a> 账户，选择免费账户（Free），并完成邮件验证。</p>
<p>建一个空的文件夹（建议命名为hexo放在D盘目录下，以后每次都要先进入这个目录然后在地址栏敲cmd把本地文件push到github上去）</p>
<p>右键-&gt;Git bash here,设置用户名和邮箱</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>

<p><strong>创建 SSH 密钥</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>

<p><strong>添加密匙：</strong></p>
<p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p>
<p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p>
<p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p>
<p><strong>验证连接：</strong></p>
<p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p>
<p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p>
<h2 id="创建-Github-Pages-仓库"><a href="#创建-Github-Pages-仓库" class="headerlink" title="创建 Github Pages 仓库"></a>创建 Github Pages 仓库</h2><p>GitHub 主页右上角加号 -&gt; New repository：</p>
<ul>
<li>Repository name 中输入 <code>用户名.github.io</code></li>
<li>勾选 “Initialize this repository with a README”</li>
<li>Description 选填</li>
</ul>
<p>填好后点击 Create repository 创建。</p>
<p>创建后默认自动启用 HTTPS，博客地址为：<code>https://用户名.github.io</code></p>
<h2 id="本地安装-Hexo-博客程序"><a href="#本地安装-Hexo-博客程序" class="headerlink" title="本地安装 Hexo 博客程序"></a>本地安装 Hexo 博客程序</h2><p>新建一个文件夹用来存放 Hexo 的程序文件，如 Hexo-Blog。</p>
<p>在这个文件夹地址栏敲cmd回车，进入这个目录下的命令行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli        # npm 安装 hexo</span><br></pre></td></tr></table></figure>

<p><strong>blog</strong> 是 hexo 初始化的文件夹，是<strong>博客根目录</strong>，可以更换成自己喜欢的文件夹名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /d D:\hexo\blog</span><br></pre></td></tr></table></figure>

<h2 id="hexo-生成静态网页文件"><a href="#hexo-生成静态网页文件" class="headerlink" title="hexo 生成静态网页文件"></a>hexo 生成静态网页文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g    </span><br></pre></td></tr></table></figure>

<h2 id="hexo-服务"><a href="#hexo-服务" class="headerlink" title="hexo 服务"></a>hexo 服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>开启hexo服务后，即可通过本地访问 blog 页面（默认为**<code>localhost:4000</code>**）预览博客页面。</p>
<p>(因为用网址访问的有延迟，所以localhost有变化那就是更改成功了)</p>
<p>有时遇到端口被占用的情况我们需要更改端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -p &quot;端口号&quot;    </span><br></pre></td></tr></table></figure>

<p>比如端口号改为4001</p>
<p><img src="/2022/02/03/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220203100030826.png"></p>
<h2 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h2><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p>
<p>首先<strong>安装 hexo-deployer-git</strong>：（默认进入blog根目录进行操作）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>然后修改blog根目录下的 <strong>_config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line"> type: git</span><br><span class="line"></span><br><span class="line"> repo: #这一行把ssh密钥的链接复制到这里</span><br></pre></td></tr></table></figure>

<p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p>
<p>访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a><strong>发布文章</strong></h3><p>进入博客所在目录，右键打开 Git Bash Here，创建博文：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n &quot;hello&quot; #hello可以自由更改对应生成的文件名</span><br></pre></td></tr></table></figure>

<p>然后在 D:\hexo\blog\source_posts 目录下会出现一个hello.md文件</p>
<p>其他指令：(~/表示博客根目录)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n hello                # 简化指令</span><br><span class="line">hexo n post hello            # 新编博文并立即发布。默认 ~/source/_posts/hello.md</span><br><span class="line">hexo n draft hello            # 新编博文但暂不发布。默认 ~/source/_drafts/hello.md</span><br><span class="line">hexo n page hello            # 新建页面（标签页，分类页等）。默认 ~/source/hello</span><br></pre></td></tr></table></figure>

<p>然后进入 D:\hexo\blog\source_posts 找到 <code>hello.md</code> ，打开文件，内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: hello</span><br><span class="line">date: 1970-1-1 8:00:00</span><br><span class="line">tags: [hello, demo]</span><br></pre></td></tr></table></figure>

<p>这些是格式头 Front-matter 每次写博客都要写这个的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World # 标题</span><br><span class="line">date: 2019/3/26 hh:mm:ss # 时间</span><br><span class="line">categories: # 分类</span><br><span class="line">- Diary</span><br><span class="line">tags: # 标签</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure>

<p>写完hexo g -d部署到github pages上就可以了</p>
<h2 id="hexo-博文插入图片"><a href="#hexo-博文插入图片" class="headerlink" title="hexo 博文插入图片"></a>hexo 博文插入图片</h2><p>更改hexo配置文件 (D:\hexo\blog\node_modules\hexo-theme-next/_config.yml`) 中的Writing配置项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>

<p>在<strong>博客根目录</strong>下安装**<code>hexo-asset-image</code>**插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<h2 id="hexo-添加标签页"><a href="#hexo-添加标签页" class="headerlink" title="hexo 添加标签页"></a>hexo 添加标签页</h2><p>在博客根目录下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>在 Front-matter 中添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: tags</span><br></pre></td></tr></table></figure>

<p>完成后 hexo 便会自动生成标签页</p>
<blockquote>
<p>记得添加进入方式</p>
</blockquote>
<h2 id="hexo-添加关于页"><a href="#hexo-添加关于页" class="headerlink" title="hexo 添加关于页"></a>hexo 添加关于页</h2><p>在博客根目录下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>

<p>在 Front-matter 中添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: about</span><br></pre></td></tr></table></figure>

<p>在正文中输入关于页内容即可</p>
<p>记得添加进入方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 诗酒趁年华</span><br><span class="line">subtitle: &quot;尚未执佩剑，转眼即江湖。 &quot;</span><br><span class="line">description: &quot;&quot;</span><br><span class="line">keywords: 生活 技术 life technology</span><br><span class="line">author: jiaxin</span><br><span class="line">language: zh-CN  #选择中文作为语言</span><br><span class="line">timezone: &quot;&quot;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
